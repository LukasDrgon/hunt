(function(root,factory){"use strict";if(typeof define==="function"&&define.amd){define(function(){return factory()})}else if(typeof exports==="object"){module.exports=factory}else{root.hunt=factory()}})(this,function(){"use strict";var huntedElements=[],viewport=window.innerHeight,ticking=false;var rAF=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame}();var Hunted=function(element,config){this.element=element;this.visible=false;for(var prop in config){if(config.hasOwnProperty(prop)){this[prop]=config[prop]}}};Hunted.prototype.offset=0;Hunted.prototype.persist=false;Hunted.prototype.in=function(){};Hunted.prototype.out=function(){};var add=function(elements,options){if(elements instanceof Node===false&&typeof elements.length!=="number"||typeof options!=="object"){throw new TypeError("You must pass an element or a collection of them and an options object")}if(elements instanceof Node===true){elements=[elements]}var i=0,len=elements.length;for(;i<len;i++){huntedElements.push(new Hunted(elements[i],options))}huntElements();i=len=null};var updateMetrics=function(){viewport=window.innerHeight};var huntElements=function(){var len=huntedElements.length,rect,hunted;if(len>0){while(len){--len;hunted=huntedElements[len];rect=hunted.element.getBoundingClientRect();if(!hunted.visible&&rect.top-hunted.offset<viewport&&rect.top>=-(rect.height+hunted.offset)){hunted.in.apply(hunted.element);hunted.visible=true}if(hunted.visible&&(rect.top-hunted.offset>viewport||rect.top<-(rect.height+hunted.offset))){hunted.out.apply(hunted.element);hunted.visible=false;if(!hunted.persist){huntedElements.splice(len,1)}}}}ticking=false;hunted=len=null};var debounceHunt=function(){if(!ticking){rAF(huntElements)}ticking=true};window.addEventListener("resize",updateMetrics);window.addEventListener("scroll",debounceHunt);return add});
